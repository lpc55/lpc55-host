var searchIndex = JSON.parse('{\
"lpc55":{"doc":"Host-side library to interact with and provision NXP LPC55 …","t":[2,2,2,2,0,0,0,0,0,0,0,0,2,3,2,13,4,13,13,2,2,2,2,13,2,6,13,13,8,11,11,11,11,11,11,11,0,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,11,0,0,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,12,12,11,11,11,12,12,12,12,12,12,13,13,4,13,13,13,4,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,17,4,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,4,13,13,13,4,13,13,13,13,13,13,3,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,4,13,13,13,13,4,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,13,3,13,18,18,13,13,18,18,18,18,18,18,13,13,13,13,13,18,3,18,3,13,13,13,4,13,3,4,18,18,18,13,13,13,18,18,13,13,18,18,18,18,13,13,18,13,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,12,12,11,12,11,12,11,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,13,13,4,13,13,13,13,3,17,4,13,3,6,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,17,5,5,5,5,5,17,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,12,12,12,3,3,3,4,4,3,13,13,13,13,13,13,3,3,13,3,3,4,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,3,13,3,4,17,3,3,8,8,2,2,13,13,13,17,3,8,3,8,13,13,13,13,3,13,13,4,3,3,3,3,13,3,13,3,3,3,3,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,13,13,13,4,3,3,13,4,13,13,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,4,4,3,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,13,4,3,3,3,18,18,18,3,3,18,13,13,3,3,3,3,13,3,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,12,12,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,12,12,12,12,11,11,11,12,11,11,12,11,11,11,12,12,11,11,12,11,12,12,12,11,11,11,11,11,5,11,12,11,11,12,12,5,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,4,13,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5],"n":["Bootloader","BootloaderError","ProtocolError","UuidSelectable","bootloader","crypto","http","pki","protected_flash","secure_binary","signed_binary","util","uuid","Bootloader","Command","CrcChecker","Error","FlashDriver","Generic","GetProperties","KeystoreOperation","Properties","Property","PropertyStore","Response","Result","SbLoader","Unknown","UuidSelectable","all_properties","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","command","deserialize","enroll_puf","eq","equivalent","erase_flash","error","find","fmt","fmt","fmt","from","from","from","having","having","info","into","into","list","list","pid","properties","property","protocol","protocol","provision","read_memory","read_memory_at_most_512","reboot","receive_sb_file","run_command","serialize","to_owned","to_string","try_find","try_from","try_from","try_into","try_into","try_new","try_uuid","try_uuid","type_id","type_id","uuid","vid","vzip","vzip","write_memory","0","0","0","0","0","0","Call","Call","Command","Command","CommandData","CommandData","CommandTag","ConfigureCan","ConfigureI2c","ConfigureMemory","ConfigureMemory","ConfigureSpi","Data","DataPhase","Enroll","EraseFlash","EraseFlash","EraseFlashAll","EraseFlashAll","EraseFlashAllUnlock","Execute","Factory","FillMemory","FillMemory","FlashProgramOnce","FlashReadMargin","FlashReadOnce","FlashReadOnce","FlashReadResource","FlashReadResource","FlashReadResource","FlashSecurityDisable","FlashSecurityDisable","GenerateKey","GenerateKeyBlob","Generic","Generic","GetProperty","GetProperty","GetProperty","GetProperty","HidHeader","KEYSTORE_KEY_NAMES","Key","Keystore","Keystore","Keystore","KeystoreOperation","None","Normal","PrinceRegion0","PrinceRegion1","PrinceRegion2","ReadKeystore","ReadMemory","ReadMemory","ReadMemory","ReadMemory","ReadNonVolatile","ReceiveSbFile","ReceiveSbFile","ReliableUpdate","ReportId","Reset","Reset","Response","Response","ResponseData","ResponseData","ResponseTag","SecureBootKek","SetKey","SetProperty","UniqueDeviceSecret","User","UserPsk","Version","WriteKeystore","WriteMemory","WriteMemory","WriteMemoryWords","WriteNonVolatile","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","data_phase","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","first","first","first","fixation","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","has_command_data","hash","hash","hash","hash","hash","hash","hash","hash","hash","header","hid_packet","into","into","into","into","into","into","into","into","into","into","into","last","last","last","major","mark","minor","next","next","next","parameters","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","previous","previous","previous","serialize","serialize","serialize","serialize","tag","tag","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","address","address","address","address","address","data","data","length","length","words","0","data","key","key","len","0","0","0","Access","Address","Alignment","Bootloader","CallFailed","Checksum","CommandFailure","CommandNotSupported","Crc32Error","CrcChecker","CrcCheckerError","CustomerScratchVersionBehindActualCustomerVersion","DataUnderrun","EofReached","EraseKeyError","ErrorGroup","ExecuteOnlyRegion","Fail","Failed","FlashDriver","FlashDriverError","Generic","GenericError","IdNotFound","Inactive","Invalid","InvalidArgument","InvalidSectionMacCount","InvalidValue","JumpReturned","KeyNotFound","MemoryInterface","NoTransferInProgress","OtfadDriver","OutOfRange","OutOfRange","Packetizer","Passed","PropertyStore","PropertyStoreError","ProtectionViolation","QuadSpiDriver","ReadOnly","ReadOnlyProperty","ReliableUpdate","ResetReturned","RollbackBlocked","SbLoader","SbLoaderError","SectionLength","SectionOverrun","SecureOnly","Signature","Size","Timeout","UnencryptedOnly","UnexpectedCommand","UnknownCommand","UnknownProperty","UnknownProperty","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","first","first","first","first","first","first","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","into","into","into","into","into","into","last","last","last","last","last","last","next","next","next","next","next","next","previous","previous","previous","previous","previous","previous","serialize","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","AvailableCommands","AvailableCommands","AvailablePeripherals","AvailablePeripherals","CALL","CAN","CrcCheckStatus","CurrentVersion","ERASE_FLASH","ERASE_FLASH_ALL","EXECUTE","FILL_MEMORY","FLASH_READ_RESOURCE","FLASH_SECURITY_DISABLE","FlashPageSize","FlashSectorSize","FlashSecurityState","FlashSize","FlashStartAddress","GET_PROPERTY","GetProperties","I2C","IrqNotificationPin","IrqNotificationPin","Keystore","MaxPacketSize","PfrKeystoreUpdateOptions","PfrKeystoreUpdateOptions","Properties","Property","READ_MEMORY","RECEIVE_SB_FILE","RESET","RamSize","RamStartAddress","ReservedRegions","SET_PROPERTY","SPI","SystemDeviceIdent","TargetVersion","UART","USB_CDC","USB_DFU","USB_HID","UniqueDeviceIdent","VerifyWrites","WRITE_MEMORY","WriteMemory","all","all","all","available_commands","available_commands","available_peripherals","available_peripherals","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","complement","complement","contains","contains","crc_check_status","crc_check_status","current_version","current_version","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","device_uuid","device_uuid","difference","difference","empty","empty","enabled","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extend","extend","first","flash_locked","flash_locked","flash_page_size","flash_page_size","flash_sector_size","flash_sector_size","flash_size","flash_size","flash_start_address","flash_start_address","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_bits_truncate","from_bits_truncate","from_bits_unchecked","from_bits_unchecked","from_iter","from_iter","hash","hash","hash","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into","into","irq_notification_pin","irq_notification_pin","is_all","is_all","is_empty","is_empty","last","max_packet_size","max_packet_size","next","not","not","partial_cmp","partial_cmp","partial_cmp","pfr_keystore_update_option","pfr_keystore_update_option","pin","port","previous","protocol","ram_size","ram_size","ram_start_address","ram_start_address","remove","remove","reserved_regions","reserved_regions","serialize","serialize","serialize","serialize","serialize","serialize","set","set","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","system_uuid","system_uuid","target_version","target_version","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","union","verify_writes","verify_writes","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AbortDataPhase","Data","Error","ExpectedDataPacket","ExpectedResponsePacket","HidApi","InvalidReportId","Protocol","READ_TIMEOUT","ReceivedPacket","Response","ResponsePacket","Result","UnknownResponseTag","Unspecified","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","call_progress","fmt","fmt","fmt","from","from","from","from","from","has_data","into","into","into","into","new","parameters","property","provide","read_packet","read_timeout","source","status","tag","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write","0","0","0","0","0","Config","borrow","borrow_mut","clone","clone_into","deserialize","fmt","from","into","provisions","serialize","to_owned","try_from","try_from","try_into","type_id","vzip","TABLE","crc32","crc32_2","hmac","nxp_aes_ctr_cipher","sha256","DEFAULT_TIMEOUT_MILLISECONDS","HttpConfig","Server","addr","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","fmt","from","from","handle_request","into","into","new","port","run","timeout_ms","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","Certificate","CertificateChain","CertificateSlot","CertificateSource","CertificateUriChain","Certificates","Chain","Pkcs1","Pkcs11Uri","Pkcs11Uri","Pkcs11Uri","Pkcs1PemFile","Pki","PublicKey","Root","Sha256Hash","Signature","SigningKey","SigningKeySource","WrappedPki","X509DerFile","all","as_bytes","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","certificate","certificate","certificate_der","certificates","chain","chain","chain_der","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","default","default","der","deserialize","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fingerprint","fingerprint","fingerprint","fingerprint","fingerprint_from_bytes","fingerprints","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_root","hash","index_of","into","into","into","into","into","into","into","into","into","into","into","into","into","len","partial_cmp","pki","public_key","public_key","root","root","serialize","serialize","serialize","serialize","serialize","sign","signer","signing_key","split_once","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_der","try_from_ders","try_from_pki","try_from_uri","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_load","try_sign","try_sign","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","chain","root","0","0","0","0","0","ActivationCode","Auto","BootConfiguration","BootSpeed","CUSTOMER_SETTINGS_SCRATCH_ADDRESS","CustomerSettings","CustomerSettingsArea","CustomerSettingsCustomerData","CustomerSettingsVendorUsage","DebugAccess","DebugSettings","DisabledBootToNonsecure","Enabled","EnabledBootToSecure","FACTORY_SETTINGS_ADDRESS","FactorySettings","FactorySettingsCustomerData","FactorySettingsProgInProgress","FactorySettingsVendorUsage","FallthroughDisabled","Fro48","Fro96","FromImageHeader","Header","I2c","Invalid","IspMode","Keycode","Keystore","KeystoreHeader","MonotonicCounter","Nxp","NxpArea","PresetTrustzoneCheckerFromImageHeader","PrinceConfiguration","PrinceIvCode","PrinceSubregion","ProtectedFlash","REGION_00","REGION_01","REGION_02","REGION_03","REGION_04","REGION_05","REGION_06","REGION_07","REGION_08","REGION_09","REGION_10","REGION_11","REGION_12","REGION_13","REGION_14","REGION_15","REGION_16","REGION_17","REGION_18","REGION_19","REGION_20","REGION_21","REGION_22","REGION_23","REGION_24","REGION_25","REGION_26","REGION_27","REGION_28","REGION_29","REGION_30","REGION_31","RawCustomerData","RawVendorUsage","Reserved","Reserved","Revoked","RotKeyStatus","RotKeysStatus","SecureBootConfiguration","Spi","TrustzoneMode","Uart","Usb","UsbId","WrappedCustomerSettings","WrappedFactorySettings","activation_code","addresses","all","as_ref","as_ref","as_ref","bitand","bitand_assign","bitor","bitor_assign","bits","bitxor","bitxor_assign","boot_configuration","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","cmp","complement","contains","customer","customer_data","customer_data","customer_settings","customer_version","debug","debug_access","debug_settings","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dice_computation_disabled","difference","empty","enable_fault_analysis_mode","encode_hex","encode_hex","encode_hex","encode_hex_upper","encode_hex_upper","encode_hex_upper","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erase_checks","extend","factory_prog_in_progress","factory_settings","factory_settings","failure_pin","failure_port","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","generated_key","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","header","header","image_key_revocation_id","include_factory_area_in_dice_computation","include_nxp_area_in_dice_computation","include_security_epoch_area_in_dice_computation","increment","insert","intersection","intersects","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_all","is_empty","keystore","locked","mode","most_recent","nonsecure_firmware_version","not","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pid","ping","pong","prince_configuration","prince_ivs","prince_region_0","prince_region_1","prince_region_2","prince_subregions","puf_discharge_time_milliseconds","puf_enrollment_disabled","puf_keycode_generation_disabled","read","remove","rot_fingerprint","rot_keys_status","scratch","seal","seal","secure_boot_configuration","secure_boot_enabled","secure_boot_kek","secure_firmware_version","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set","speed","sub","sub_assign","symmetric_difference","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","toggle","trustzone_mode","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","union","unique_device_secret","usb_id","use_rsa4096_keys","user_key","user_key","valid","valid_activation_code","vendor_usage","vendor_usage","vid","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","Authenticate","Authenticate","Custom","DebugAccess","DebugSetting","DebugSettings","Default","Default","Disabled","Disabled","Enabled","Enabled","Illegal","are_all_default","are_all_legal","are_all_non_default","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","check_uuid","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","cmp","cpu1_invasive","cpu1_noninvasive","default","default","default","deserialize","deserialize","deserialize","eq","eq","eq","equivalent","equivalent","equivalent","fault_analysis_command","flash_mass_erase_command","fmt","fmt","fmt","from","from","from","from","from","from","from","hash","hash","hash","into","into","into","isp_boot_command","jtag_tap","nonsecure_invasive","nonsecure_noninvasive","partial_cmp","partial_cmp","partial_cmp","secure_invasive","secure_noninvasive","serialize","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","0","CertificateBlockHeader","Config","Elf","Filetype","Firmware","FullCertificateBlockHeader","Keyblob","LEN","MAX","MIN","NaiveDate","Reproducibility","SBKEK","Sb20","Sb21","Sb21CommandPart","Sb21FileParameters","Sb21HeaderPart","Sb2Header","SignedBin","SignedSb21File","UnsignedBin","UnsignedSb21File","Version","add","add","add","add_assign","and_hms","and_hms_micro","and_hms_micro_opt","and_hms_milli","and_hms_milli_opt","and_hms_nano","and_hms_nano_opt","and_hms_opt","and_time","boot_tag_offset_blocks","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","certificates","checked_add_days","checked_add_months","checked_add_signed","checked_sub_days","checked_sub_months","checked_sub_signed","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","command","command_part","command_part","commands","commands","component","customer_settings","day","day0","default","default","default","dek","deserialize","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","factory_settings","firmware","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","format","format_with_items","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_isoywd","from_isoywd_opt","from_num_days_from_ce","from_num_days_from_ce_opt","from_str","from_weekday_of_month","from_weekday_of_month_opt","from_ymd","from_ymd_opt","from_yo","from_yo_opt","hash","hash","header_part","header_part","image","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_empty","iso_week","iter_days","iter_weeks","keyblob","len","mac","major","major","minor","minor","minor_as_date","month","month0","nonce","ordinal","ordinal0","parameters","parse_from_str","partial_cmp","partial_cmp","patch","pki","pred","pred_opt","product","product_version","reproducibility","sb_header_padding","secure_boot_image","serialize","serialize","serialize","serialize","serialize","show","sign","signature","signed_data_length","signed_duration_since","signed_image","slot","sniff","sub","sub","sub","sub","sub_assign","succ","succ_opt","timestamp","timestamp_micros","to_bytes","to_bytes","to_calver","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_semver","to_string","total_serialized_length","try_assemble_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unsigned_file","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","week","weekday","with_day","with_day0","with_month","with_month0","with_ordinal","with_ordinal0","with_year","year","years_since","BootCommand","BootCommandDescription","BootCommandSequenceDescription","BootTag","Call","ChangeBootMode","CheckDerivedFirmwareVersions","CheckFirmwareVersion","CheckNonsecureFirmwareVersion","CheckNonsecureFirmwareVersion","CheckSecureFirmwareVersion","CheckSecureFirmwareVersion","Erase","Erase","EraseAll","EraseRegion","Fill","Fill","Jump","KeystoreFromNonvolatile","KeystoreToNonvolatile","Load","Load","Load","MemoryEnable","Nop","Nop","ProgramPersistentBits","RawBootCommand","Reset","Sequence","Single","SingleBootCommandDescription","Tag","Tag","UploadSignedImage","address","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","checksum","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","count","data","default","deserialize","deserialize","deserialize","deserialize","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","flags","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","into","into","into","into","into","into","serialize","serialize","serialize","serialize","tag","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","address","address","address","bytes","bytes","cipher_blocks","data","flags","last","pattern","tag","version","version","0","0","dst","end","file","len","src","start","version","version","0","ImageSigningRequest","SignedImage","borrow","borrow","borrow_mut","borrow_mut","certificates","from","from","into","into","plain_image","selected_certificate","sign","slot","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","block_pad","block_pad_len","block_padded","hex_deserialize_256","hex_deserialize_32","hex_serialize","word_pad","word_pad_len","word_padded"],"q":["lpc55","","","","","","","","","","","","","lpc55::bootloader","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lpc55::bootloader::Error","","","","","","lpc55::bootloader::commandlpc55::bootloader::command::Command","","","","","","","","","","","","lpc55::bootloader::command::DataPhase","lpc55::bootloader::command::KeystoreOperation","","","","lpc55::bootloader::command::Response","","","lpc55::bootloader::errorlpc55::bootloader::propertylpc55::bootloader::protocol","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lpc55::bootloader::protocol::Error","","","lpc55::bootloader::protocol::ReceivedPacket","","lpc55::bootloader::provision","","","","","","","","","","","","","","","","","lpc55::crypto","","","","","","lpc55::http","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lpc55::pkilpc55::pki::CertificateSource","","lpc55::pki::CertificateUriChain","","","lpc55::pki::SigningKey","","lpc55::pki::SigningKeySource","","lpc55::protected_flashlpc55::protected_flash::IspMode","lpc55::protected_flash::debug","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lpc55::protected_flash::debug::DebugAccess","lpc55::secure_binarylpc55::secure_binary::command","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lpc55::secure_binary::command::BootCommand","","","","","","","","","","","","","lpc55::secure_binary::command::BootCommandDescription","","lpc55::secure_binary::command::SingleBootCommandDescription","","","","","","","","lpc55::signed_binary","","","","","","","","","","","","","","","","","","","","","","","","","lpc55::util","","","","","","","",""],"d":["","","","","The bootloader interface","NXP’s CRC32 and AES-CTR algorithms","HTTP server interface to this crate’s functionality","Abstraction allowing use of either PKCS1 PEM file or …","The protected flash area (PFR) as Rust types","Generator and parser for signed firmware and SB (secure …","","","","","","","Bootloader commands return a “status”. The non-zero …","","","","","","","","","","","","","","","","","","","","","","","","","","…","Finds all ROM bootloader with the given VID, PID and UUID.","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the thing with the given UUID.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns all of the available things.","Returns a vector of all HID devices that appear to be ROM …","","","","","","","The reason for this wrapper is that the device aborts …","","","","","","","","Attempt to find a unique ROM bootloader with the given …","","","","","Select a unique ROM bootloader with the given VID and PID.","Returns the UUID associated with the thing, if it has a …","","","","","","","","","","","","","","","","","","","","","","","","cf. …","","","","Signifies which of the three cases of the protocol is used.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","numbers can be found in UM, Chap 7.3.2 “Key descriptions…","","","","This is the interface definition to a somewhat limited …","","","","","","","","","","","","","","","","","","","","","","","used by bootloader to decrypt SB2.1 firmware images","","","","","not used by bootloader. idea is to use as pre-shared …","","","","","Converts the words to little-endian, then delegates to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","Not yet quite clear what comes from HID spec, and what’s …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the set containing all flags.","Returns the set containing all flags.","","","","","Returns the intersection between the two sets of flags.","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Returns the union of the two sets of flags.","Adds the set of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Returns the left flags, but with all the right flags …","Toggles the set of flags.","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","","","","","","","","","","","","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","Convert from underlying bit representation, preserving all …","","","","","","Inserts the specified flags in-place.","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","Returns <code>true</code> if no flags are currently stored.","","","","","Returns the complement of this set of flags.","Returns the complement of this set of flags.","","","","","","","","","","","","","","Removes the specified flags in-place.","Removes the specified flags in-place.","","","","","","","","","Inserts or removes the specified flags depending on the …","Inserts or removes the specified flags depending on the …","Returns the set difference of the two sets of flags.","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","Toggles the specified flags in-place.","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Returns the union of between the flags in <code>self</code> and <code>other</code>.","","","","","","","","","","","","The NXP bootloader protocol error type","","","","","The NXP bootloader protocol. Interact via …","","","","","The NXP bootloader protocol result type, with split status …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Commands for the bootloader","","","","","","","","","Soooo…. This “uses” the “Ethernet CRC algorithm” …","","","NXP’s AES-CTR cipher.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Specification of PKI for secure (signed) boot.","An RSA2k public key","","","","","","Type enabling <code>lpc55 rotkh</code> to share config file with the …","","Returns an iterator over the chain, starting with the root …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the end of chain certificate from the chain","Get the DER reprensentation for the end of chain …","Paths to the four root certificates.","","","Returns an iterator of the DER serialization of the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Get the fingerprint of the 4 root certificates","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","panics if i &gt; 3","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","URI specifying the private RSA2K key used for signing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks certificate is valid, and public key is RSA.","Checks certificates are valid, and public keys are all RSA.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Purposely swapped 48MHz and 96MHz values from what they …","","See <code>CustomerSettingsArea</code> documentation for how this part …","This is a bit of an interesting construction.","","","","","","","","","","","CMPA Page programming on going. This field shall be set to …","","","","","","","","","","Input to regenerate keys “stored” in the PUF.","All the keys :)","","","","This is incorrect. There’s more in the NMPA spreadsheet …","","","Generated and used only by bootloader.","","For a graphical overview: …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The PID/VID pair of the bootloader can be set arbitrarily, …","Type enabling <code>lpc55 configure customer-settings</code> to share …","Type enabling <code>lpc55 configure factory-settings</code> to share …","1192 bytes of data, generated when PUF is enrolled.","","Returns the set containing all flags.","","","","Returns the intersection between the two sets of flags.","Disables all flags disabled in the set.","Returns the union of the two sets of flags.","Adds the set of flags.","Returns the raw value of the flags currently stored.","Returns the left flags, but with all the right flags …","Toggles the set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the complement of this set of flags.","Returns <code>true</code> if all of the flags in <code>other</code> are contained …","","224 bytes that the customer can use.","","","monotonic counter","","","","","","","","","","","","","","","Set to (0, 0), which the bootloader interprets as its …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","For this DICE stuff, see also …","Returns the difference between the flags in <code>self</code> and <code>other</code>.","Returns an empty set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Convert from underlying bit representation, unless that …","Convert from underlying bit representation, dropping any …","Convert from underlying bit representation, preserving all …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The Excel spreadsheet says “Valid Key Sore Header : …","","","","","","Inserts the specified flags in-place.","Returns the intersection between the flags in <code>self</code> and …","Returns <code>true</code> if there are flags common to both <code>self</code> and …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if all flags are currently set.","Returns <code>true</code> if no flags are currently stored.","","","","Returns either the ping or pong page, whichever has the …","monotonic counter","Returns the complement of this set of flags.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Key used when PRINCE is activated for the first PRINCE …","Key used when PRINCE is activated for the first PRINCE …","Key used when PRINCE is activated for the first PRINCE …","","Excel spreadsheet specifies this interpretation.","","","","Removes the specified flags in-place.","Fingerprint of allowed root certificates for signed …","","","Setting this to true will calculate the SHA256 …","Setting this to true will calculate the SHA256 …","","","KEK for secure boot, aka SBKEK.","monotonic counter","","","","","","","","","","","","","","","","","","","","","","","","","","","","Inserts or removes the specified flags depending on the …","","Returns the set difference of the two sets of flags.","Disables all flags enabled in the set.","Returns the symmetric difference between the flags in <code>self</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Toggles the specified flags in-place.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of between the flags in <code>self</code> and <code>other</code>.","Key intended for use with the “DICE” algorithm, which …","","","","","Not sure if this is true (in analogy with “header”)","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Debugger must present a Debug Credential (this …","Debugging disabled at startup, only authenticated debugger …","“Bring your own settings”","Wrapper around the detailed debug access settings, …","Controls access of debuggers to specific subsystems.","","The state of an empty key (all four relevant words are …","Default state at startup. Will only be accepted when …","Debugging access is not possible","Disabled at startup, debugging not possible","Debugging access is possible","Debugging enabled at startup (debugger can’t turn off). …","According to UM 11126, 51.7.14, Table 1064: “Illegal …","","","","","","","","","","enforce UUID match during debug authentication","","","","","","","","","","invasive debugging of CPU1","non-invasive debugging of CPU1","Set to default, so that <code>lpc55 factory-settings</code> does not …","Set to enabled, so that <code>lpc55 factory-settings</code> does not …","","","","","","","","","","","FA (fault analysis) command","Flash mass erase command","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","ISP boot command","JTAG test access port","invasive debugging of the TrustZone non-secure domain of …","non-invasive debugging of the TrustZone non-secure domain …","","","","invasive debugging of the TrustZone secure domain of CPU0","non-invasive debugging of the TrustZone secure domain of …","","","","","","","","","","","","","","","","","","","","","Main configuration file format for chip configuration and …","","","Firmware versions and image locations.","","For the proprietary use case, firmware inside the “…","96 bytes","The maximum possible <code>NaiveDate</code> (December 31, 262143 CE).","The minimum possible <code>NaiveDate</code> (January 1, 262145 BCE).","ISO 8601 calendar date without timezone. Allows for every …","","Conor picked this KEK once, all zeros would work too, but …","","","","","","full size: 0x60 = 96 bytes","","","","","Version of a firmware.","","An addition of months to <code>NaiveDate</code> clamped to valid days …","","","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date, hour, …","Makes a new <code>NaiveDateTime</code> from the current date and given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Add a duration in <code>Days</code> to the date","Add a duration in <code>Months</code> to the date","Adds the <code>days</code> part of given <code>Duration</code> to the current date.","Subtract a duration in <code>Days</code> from the date","Subtract a duration in <code>Months</code> from the date","Subtracts the <code>days</code> part of given <code>Duration</code> from the current …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Commands and command sequences for the SB file","","","","Returns the day of month starting from 1.","Returns the day of month starting from 0.","","","","Encryption key for SB2.1 command sections.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Formats the date with the specified format string. See the …","Formats the date with the specified formatting items. …","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Makes a new <code>NaiveDate</code> from the ISO week date (year, week …","Makes a new <code>NaiveDate</code> from the ISO week date (year, week …","Makes a new <code>NaiveDate</code> from a day’s number in the …","Makes a new <code>NaiveDate</code> from a day’s number in the …","","Makes a new <code>NaiveDate</code> by counting the number of …","Makes a new <code>NaiveDate</code> by counting the number of …","Makes a new <code>NaiveDate</code> from the calendar date (year, month …","Makes a new <code>NaiveDate</code> from the calendar date (year, month …","Makes a new <code>NaiveDate</code> from the ordinal date (year and day …","Makes a new <code>NaiveDate</code> from the ordinal date (year and day …","","","","","Path to the input image (can be ELF, signed or unsigned …","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns an iterator that steps by days across all …","Returns an iterator that steps by weeks across all …","","96 bytes","MAC key for SB2.1 command sections.","","","","","The minor version component in its interpretation as days …","Returns the month number starting from 1.","Returns the month number starting from 0.","Nonce for the “AES-CTR-in-NXP-variant” encryption of …","Returns the day of year starting from 1.","Returns the day of year starting from 0.","","Parses a string with the specified format string and …","","","","","Makes a new <code>NaiveDate</code> for the previous calendar date.","Makes a new <code>NaiveDate</code> for the previous calendar date.","","","","NXP fills the last 4 bytes of <code>Sb2Header</code> with random values.","Path to place signed SB2.1 file","","","","","","","TODO: figure out how generic this “key” should be. We …","","","Subtracts another <code>NaiveDate</code> from the current date. Returns …","Path to place signed binary","","","A subtraction of Months from <code>NaiveDate</code> clamped to valid …","","","","","Makes a new <code>NaiveDate</code> for the next calendar date.","Makes a new <code>NaiveDate</code> for the next calendar date.","Timestamp in microseconds since 2000-01-01","","","For binary consumption, padded with zero bytes","For end-user consumption.","","","","","","","","","","","","","","","For end-user consumption, period-separated, not BCD","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the <code>NaiveWeek</code> that the date belongs to, starting …","Returns the day of week.","Makes a new <code>NaiveDate</code> with the day of month (starting from …","Makes a new <code>NaiveDate</code> with the day of month (starting from …","Makes a new <code>NaiveDate</code> with the month number (starting from …","Makes a new <code>NaiveDate</code> with the month number (starting from …","Makes a new <code>NaiveDate</code> with the day of year (starting from …","Makes a new <code>NaiveDate</code> with the day of year (starting from …","Makes a new <code>NaiveDate</code> with the year number changed.","Returns the year number in the calendar date.","Returns the number of whole years from the given <code>base</code> …","","","High level commands that lpc55 will convert safely into …","","","","Takes the version specified in <code>config.firmware.product</code> and …","","","","","","","Maps to <code>BootCommand::EraseRegion</code>, but <code>start</code> and <code>end</code> are …","","","","See ELFTOSB document for explanations of what is supposed …","","","","","Load (part) of the data reference in <code>source</code> to flash.","","","","","","","","","","Commands used to define SB2.1 files","","","Takes the filename specified in image from <code>config.firmware</code>,","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","destination offset in bytes (default 0)","","","number of bytes to copy","source offset in bytes (default 0)","","","","","Technically probably incorrect naming, as no ownership of …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Fails only if signing key does not match selected …","","","","Parse config, load all data checking for validity.","","","","","","","Pad to multiple of AES block (16 bytes = 128 bits)","Length after block padding","Padded to multiple of AES block (16 bytes = 128 bits)","","","","Pad to multiple of machine word (4 bytes = 32 bits)","Length after word-padding","Padded to multiple of machine word (4 bytes = 32 bits)"],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,3,3,0,0,0,0,3,0,0,3,3,0,1,1,3,1,3,3,3,0,3,1,3,3,1,0,1,1,1,3,1,3,3,153,1,1,1,3,153,1,1,1,0,0,1,0,1,1,1,1,1,3,3,1,1,1,3,1,3,1,153,1,1,3,1,1,1,3,1,154,155,156,157,158,159,18,23,0,27,24,27,0,23,23,18,23,23,19,0,31,18,23,18,23,23,23,29,18,23,23,0,23,26,18,23,26,18,23,31,23,26,19,18,23,26,19,0,0,0,18,23,26,0,24,29,30,30,30,31,18,23,26,19,31,18,23,23,0,18,23,0,27,24,27,0,30,31,23,30,29,30,0,31,18,23,18,31,18,23,24,25,26,19,27,28,29,30,31,18,23,24,25,26,19,27,28,29,30,31,18,23,24,25,26,19,27,28,29,30,31,18,23,24,25,26,19,27,28,29,30,31,18,23,24,25,26,19,27,30,31,18,18,28,30,31,18,23,24,25,26,19,27,28,30,31,18,23,24,25,26,19,27,28,30,31,23,26,27,28,18,23,24,25,26,19,27,28,28,29,30,31,18,23,24,25,26,19,27,28,28,29,30,31,24,18,23,24,25,26,19,27,30,31,18,18,18,23,24,25,26,19,27,28,29,30,31,23,26,27,28,28,28,23,26,27,18,18,23,24,25,26,19,27,30,31,23,26,27,18,28,30,31,18,19,18,23,24,25,26,19,27,28,29,30,31,28,18,23,24,25,26,26,19,27,27,28,29,29,30,30,31,18,23,24,25,26,19,27,28,29,30,31,18,23,24,25,26,19,27,28,29,30,31,18,23,24,25,26,19,27,28,29,30,31,160,161,162,163,164,165,166,164,167,162,163,165,168,169,169,170,170,171,172,173,37,37,37,35,38,38,37,37,38,35,0,37,38,38,37,0,37,36,40,35,0,35,0,38,40,40,36,38,39,38,38,35,36,35,36,40,35,40,35,0,37,35,36,39,35,38,38,35,0,38,38,38,38,37,36,38,38,38,37,39,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,36,37,38,39,40,36,37,38,39,40,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,36,37,38,39,40,35,36,37,38,39,40,35,35,36,36,37,37,38,38,39,39,40,40,35,36,37,38,39,40,35,36,37,38,39,40,35,36,37,38,39,40,0,44,0,44,41,42,44,44,41,41,41,41,41,41,44,44,44,44,44,41,0,42,0,44,45,44,0,44,0,0,41,41,41,44,44,44,41,42,44,44,42,42,42,42,44,44,41,45,15,41,42,15,2,15,2,41,42,41,42,41,42,41,42,41,42,41,42,41,42,15,2,44,41,42,45,46,15,2,44,41,42,45,46,2,44,41,42,45,46,2,44,41,42,45,46,44,41,42,41,42,41,42,15,2,15,2,2,44,41,42,45,46,15,2,41,42,41,42,46,2,44,41,42,45,46,2,44,41,42,45,46,41,42,44,15,2,15,2,15,2,15,2,15,2,2,44,41,41,41,41,41,42,42,42,42,42,45,46,15,2,44,41,42,45,45,46,46,41,42,41,42,41,42,41,42,44,41,42,41,42,41,42,41,42,15,2,44,41,42,45,46,15,2,41,42,41,42,44,15,2,44,41,42,44,41,42,15,2,46,46,44,15,15,2,15,2,41,42,15,2,2,44,41,42,45,46,41,42,41,42,41,42,41,42,15,2,15,2,2,44,41,42,45,46,41,42,15,2,44,41,42,45,46,15,2,44,41,42,45,46,15,2,44,41,42,45,46,41,42,15,2,15,2,44,41,42,45,46,20,55,0,20,20,20,20,0,0,0,55,0,0,20,20,50,58,55,20,50,58,55,20,50,50,50,20,20,50,58,55,20,20,58,50,58,55,20,50,58,50,20,50,50,20,58,58,20,50,58,58,55,20,50,58,55,20,50,58,55,20,50,58,55,20,50,174,175,176,177,178,0,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,0,0,0,0,0,0,0,0,0,60,61,60,61,60,60,60,60,60,61,60,61,61,60,61,60,61,60,60,61,60,61,60,61,60,61,60,75,64,65,0,0,0,0,0,0,70,74,71,74,76,71,0,0,70,0,0,0,0,0,76,62,64,64,65,71,72,70,73,74,75,64,69,76,66,62,68,65,71,72,70,73,74,75,64,69,76,66,62,68,65,66,68,68,72,70,68,68,71,72,70,73,74,75,64,69,76,66,62,68,65,71,72,70,73,74,75,64,69,76,66,62,68,65,65,69,65,66,72,70,73,69,65,64,65,64,65,71,72,70,73,74,75,64,69,76,65,71,72,70,73,75,64,69,76,65,74,75,66,68,68,68,71,72,70,73,74,75,64,69,76,66,62,68,65,71,72,70,73,74,75,64,69,69,76,66,62,68,65,65,64,62,65,68,71,72,70,73,74,75,64,69,76,66,62,68,65,62,65,73,74,66,70,62,72,70,73,69,65,74,62,72,0,71,72,70,73,74,75,64,69,76,66,62,68,65,71,71,72,72,70,73,74,75,64,64,69,76,76,66,66,62,62,68,68,65,66,68,68,74,71,72,70,73,74,75,64,69,76,66,62,68,65,74,74,74,71,72,70,73,74,75,64,69,76,66,62,68,65,71,72,70,73,74,75,64,69,76,66,62,68,65,179,180,181,182,182,183,184,185,186,89,0,93,0,0,0,0,0,0,0,0,0,96,106,96,0,0,0,0,0,93,92,92,96,0,93,106,0,0,0,0,0,92,0,96,0,0,0,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,0,92,93,106,0,0,0,93,0,93,93,0,0,0,90,98,79,80,81,82,79,79,79,79,79,79,79,85,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,79,79,83,85,86,88,86,0,85,86,85,86,87,88,89,80,81,90,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,97,79,79,86,80,81,82,80,81,82,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,98,79,86,83,87,94,94,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,79,79,79,79,82,99,100,101,102,103,104,105,106,83,85,86,87,88,89,80,81,90,91,92,92,93,93,94,94,95,95,96,96,97,97,98,98,79,82,82,99,100,101,101,102,103,103,104,105,106,106,79,79,79,79,80,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,86,90,86,97,97,97,105,79,79,79,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,79,79,83,98,94,99,86,79,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,95,99,99,85,86,90,90,90,85,90,97,97,105,79,85,86,99,85,86,85,97,90,86,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,79,94,79,79,79,85,86,90,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,79,97,83,83,85,85,86,86,87,88,89,80,81,90,90,91,92,93,94,95,96,97,98,79,82,99,99,100,101,102,103,104,105,106,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,79,90,85,97,80,90,80,86,85,86,95,83,85,86,87,88,89,80,81,90,91,92,93,94,95,96,97,98,79,82,99,100,101,102,103,104,105,106,187,114,115,114,0,0,0,114,115,114,115,114,115,115,108,108,108,114,115,108,114,115,108,108,114,115,108,114,115,108,114,115,108,108,108,114,115,108,114,115,108,114,115,108,114,115,108,108,108,114,115,108,114,114,115,115,108,108,108,114,115,108,114,115,108,108,108,108,108,114,115,108,108,108,114,115,108,114,115,108,114,115,108,114,115,108,114,115,108,114,115,108,188,0,0,126,0,0,0,0,133,116,116,0,0,132,126,126,0,0,0,0,126,0,126,0,0,116,116,116,116,116,116,116,116,116,116,116,116,116,122,189,116,123,124,125,126,127,122,128,129,130,131,132,133,134,189,116,123,124,125,126,127,122,128,129,130,131,132,133,134,189,124,122,116,116,116,116,116,116,116,123,124,125,126,127,122,128,129,130,131,132,133,134,116,123,124,125,126,127,122,128,129,130,131,132,133,134,116,131,0,122,129,123,122,124,123,116,116,116,125,132,125,123,124,125,131,132,116,125,126,131,116,125,126,131,123,123,116,116,123,124,125,126,127,122,128,129,130,131,132,133,134,116,116,189,116,123,124,125,126,127,122,128,129,130,131,131,131,132,133,134,133,116,116,116,116,116,116,116,116,116,116,116,116,126,122,129,124,189,116,123,124,125,126,127,122,128,129,130,131,132,133,134,133,116,116,116,122,133,125,189,131,189,131,131,116,116,125,116,116,122,116,116,131,131,123,116,116,124,133,123,125,124,123,124,125,131,132,0,122,129,122,116,124,122,0,116,116,116,116,116,116,116,125,131,129,131,131,116,123,124,125,126,127,122,128,129,130,131,132,133,134,131,116,122,122,189,116,123,123,124,125,126,127,122,128,129,130,131,132,133,134,189,116,123,124,125,126,127,122,128,129,130,131,132,133,134,189,116,123,124,125,126,127,122,128,129,130,131,132,133,134,129,189,116,123,124,125,126,127,122,128,129,130,131,132,133,134,116,116,116,116,116,116,116,116,116,116,116,0,0,0,0,144,144,147,144,146,149,146,149,144,146,149,149,144,149,144,144,144,144,146,149,144,144,149,144,0,144,148,148,0,144,149,147,145,144,145,146,147,148,149,144,145,146,147,148,149,145,144,145,146,147,148,149,144,145,146,147,148,149,145,145,145,146,147,148,149,144,145,146,147,148,149,144,145,146,147,148,149,145,144,145,146,147,148,149,144,145,146,147,148,149,145,149,144,145,146,147,148,149,146,147,148,149,145,145,149,144,145,146,147,148,149,144,145,146,147,148,149,149,144,145,146,147,148,149,144,145,146,147,148,149,144,145,146,147,148,149,190,191,192,191,192,193,190,193,193,191,193,194,195,196,197,198,199,198,198,198,199,200,201,152,0,0,152,151,152,151,151,152,151,152,151,151,151,151,151,152,151,151,152,151,152,151,152,151,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[]],[[]],[[]],[[]],[3,3],[[]],0,[[],[[4,[3]]]],[1],[[3,3],5],[[],5],[[1,6,6]],0,[[[8,[7]],[8,[7]],[8,[9]]],[[10,[1]]]],[[1,11],12],[[1,11],12],[[3,11],12],[[]],[[]],[13,3],[9,14],[9,[[14,[1]]]],[1],[[]],[[]],[[],10],[[],[[10,[1]]]],0,[1,15],0,0,0,0,[[1,6,6],[[10,[16]]]],[[1,6,6],[[10,[16]]]],[1],[[1,[8,[17]]]],[[1,18],[[4,[19,20]]]],[3,4],[[]],[[],21],[[[8,[7]],[8,[7]],[8,[9]]],[[14,[1]]]],[[],4],[[],4],[[],4],[[],4],[[[8,[7]],[8,[7]]],[[14,[1]]]],[[],[[14,[9]]]],[1,[[14,[9]]]],[[],22],[[],22],0,0,[[]],[[]],[[1,6,[10,[16]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[18,18],[23,23],[24,24],[25,25],[26,26],[19,19],[27,27],[28,28],[29,29],[30,30],[31,31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[18,18],32],[[23,23],32],[[24,24],32],[[25,25],32],[[26,26],32],[[19,19],32],[[27,27],32],[[30,30],32],[[31,31],32],[18,24],[[],[[4,[18]]]],[[],[[4,[28]]]],[[],[[4,[30]]]],[[],[[4,[31]]]],[[18,18],5],[[23,23],5],[[24,24],5],[[25,25],5],[[26,26],5],[[19,19],5],[[27,27],5],[[28,28],5],[[30,30],5],[[31,31],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],[[8,[23]]]],[[],[[8,[26]]]],[[],[[8,[27]]]],0,[[18,11],12],[[23,11],12],[[24,11],12],[[25,11],12],[[26,11],12],[[19,11],12],[[27,11],12],[[28,11],12],[[28,11],[[4,[33]]]],[[29,11],12],[[30,11],12],[[31,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,28],[[]],[[]],[[]],[[]],[24,5],[18],[23],[24],[25],[26],[19],[27],[30],[31],[18],[18,[[10,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[23]]]],[[],[[8,[26]]]],[[],[[8,[27]]]],0,0,0,[23,[[8,[23]]]],[26,[[8,[26]]]],[27,[[8,[27]]]],[18,[[10,[13]]]],[[18,18],[[8,[32]]]],[[23,23],[[8,[32]]]],[[24,24],[[8,[32]]]],[[25,25],[[8,[32]]]],[[26,26],[[8,[32]]]],[[19,19],[[8,[32]]]],[[27,27],[[8,[32]]]],[[30,30],[[8,[32]]]],[[31,31],[[8,[32]]]],[23,[[8,[23]]]],[26,[[8,[26]]]],[27,[[8,[27]]]],[18,4],[28,4],[30,4],[31,4],[18,23],[19,26],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],21],[[],4],[[],4],[[],4],[[],4],[[],4],[16,[[4,[26,16]]]],[[],4],[[],4],[16,[[4,[27]]]],[[],4],[[],4],[16,[[4,[29,16]]]],[34,[[4,[30]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[35,35],[36,36],[37,37],[38,38],[39,39],[40,40],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[4,[36]]]],[[],[[4,[37]]]],[[],[[4,[38]]]],[[],[[4,[39]]]],[[],[[4,[40]]]],[[36,36],5],[[37,37],5],[[38,38],5],[[39,39],5],[[40,40],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],[[8,[35]]]],[[],[[8,[36]]]],[[],[[8,[37]]]],[[],[[8,[38]]]],[[],[[8,[39]]]],[[],[[8,[40]]]],[[35,11],12],[[36,11],12],[[37,11],12],[[38,11],12],[[39,11],12],[[40,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[35]]]],[[],[[8,[36]]]],[[],[[8,[37]]]],[[],[[8,[38]]]],[[],[[8,[39]]]],[[],[[8,[40]]]],[35,[[8,[35]]]],[36,[[8,[36]]]],[37,[[8,[37]]]],[38,[[8,[38]]]],[39,[[8,[39]]]],[40,[[8,[40]]]],[35,[[8,[35]]]],[36,[[8,[36]]]],[37,[[8,[37]]]],[38,[[8,[38]]]],[39,[[8,[39]]]],[40,[[8,[40]]]],[36,4],[37,4],[38,4],[39,4],[40,4],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[13,[[4,[35,13]]]],[[],4],[16,[[4,[36,16]]]],[16,[[4,[37,16]]]],[[],4],[[],4],[16,[[4,[38,16]]]],[[],4],[16,[[4,[39,16]]]],[[],4],[16,[[4,[40,16]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[15,2],[[],41],[[],42],[15,[[43,[41]]]],0,[15,[[43,[42]]]],0,[[41,41],41],[[42,42],42],[[41,41]],[[42,42]],[[41,41],41],[[42,42],42],[[41,41]],[[42,42]],[41,13],[42,13],[[41,41],41],[[42,42],42],[[41,41]],[[42,42]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,2],[44,44],[41,41],[42,42],[45,45],[46,46],[[]],[[]],[[]],[[]],[[]],[[]],[[44,44],32],[[41,41],32],[[42,42],32],[41,41],[42,42],[[41,41],5],[[42,42],5],[15,[[43,[3]]]],0,[15,[[43,[28]]]],0,[[],[[4,[2]]]],[[],[[4,[44]]]],[[],[[4,[41]]]],[[],[[4,[42]]]],[[],[[4,[45]]]],[[],[[4,[46]]]],[15,[[43,[47]]]],0,[[41,41],41],[[42,42],42],[[],41],[[],42],0,[[2,2],5],[[44,44],5],[[41,41],5],[[42,42],5],[[45,45],5],[[46,46],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[41,48]],[[42,48]],[[],[[8,[44]]]],[15,[[43,[5]]]],0,[15,[[43,[6]]]],0,[15,[[43,[6]]]],0,[15,[[43,[6]]]],0,[15,[[43,[6]]]],0,[[2,11],12],[[44,11],12],[[41,11],12],[[41,11],12],[[41,11],12],[[41,11],12],[[41,11],12],[[42,11],12],[[42,11],12],[[42,11],12],[[42,11],12],[[42,11],12],[[45,11],12],[[46,11],12],[[]],[[]],[[]],[[]],[[]],[13,45],[[]],[13,46],[[]],[13,[[8,[41]]]],[13,[[8,[42]]]],[13,41],[13,42],[13,41],[13,42],[48,41],[48,42],[44],[41],[42],[[41,41]],[[42,42]],[[41,41],41],[[42,42],42],[[41,41],5],[[42,42],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[15,[[43,[46]]]],0,[41,5],[42,5],[41,5],[42,5],[[],[[8,[44]]]],[15,[[43,[6]]]],0,[44,[[8,[44]]]],[41,41],[42,42],[[44,44],[[8,[32]]]],[[41,41],[[8,[32]]]],[[42,42],[[8,[32]]]],[15,[[43,[45]]]],0,0,0,[44,[[8,[44]]]],0,[15,[[43,[6]]]],0,[15,[[43,[6]]]],0,[[41,41]],[[42,42]],[15,[[43,[10]]]],0,[2,4],[44,4],[41,4],[42,4],[45,4],[46,4],[[41,41,5]],[[42,42,5]],[[41,41],41],[[42,42],42],[[41,41]],[[42,42]],[[41,41],41],[[42,42],42],[15,[[43,[49]]]],0,[15,[[43,[28]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[41,41]],[[42,42]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[41,41],41],[[42,42],42],[15,[[43,[5]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[50,18],[[51,[19]]]],[[50,18,[8,[17]]],[[51,[19]]]],[[50,11],12],[[20,11],12],[[20,11],12],[[]],[[]],[[]],[[]],[52,20],0,[[]],[[]],[[]],[[]],[53,50],0,[[50,44],[[4,[[10,[13]],3]]]],[54],[50,[[51,[55]]]],[[50,6],[[56,[[10,[16]]]]]],[20,[[8,[57]]]],0,0,[[],21],[[],4],[[],4],[55,[[51,[58]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[50,51],0,0,0,0,0,0,[[]],[[]],[59,59],[[]],[[],[[4,[59]]]],[[59,11],12],[[]],[[]],0,[59,4],[[]],[[],4],[34,[[14,[59]]]],[[],4],[[],22],[[]],0,[[],13],[[],13],[[]],[13,[[10,[16]]]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[60,60],[[]],[[],60],[[60,11],12],[[]],[[]],[61,14],[[]],[[]],[[60,1],[[14,[61]]]],0,[61,14],0,[[]],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[62,63],[64],[64],[65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,67],[[68,69],66],[[68,69]],0,[70],[[68,69],62],[[68,69],63],[71,71],[72,72],[70,70],[73,73],[74,74],[75,75],[64,64],[69,69],[76,76],[66,66],[62,62],[68,68],[65,65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[65,65],32],[[],69],[[],65],[66],[[],[[4,[72]]]],[[],[[4,[70]]]],[[],[[4,[73]]]],[[],[[4,[69]]]],[[],[[4,[65]]]],[[]],[[]],[[]],[[]],[[71,71],5],[[72,72],5],[[70,70],5],[[73,73],5],[[74,74],5],[[75,75],5],[[64,64],5],[[69,69],5],[[76,76],5],[[65,65],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[74,65],[75,65],[66,65],[68,65],[[],65],[68],[[71,11],12],[[72,11],12],[[70,11],12],[[73,11],12],[[74,11],12],[[75,11],12],[[64,11],12],[[69,11],12],[[76,11],12],[[66,11],12],[[62,11],12],[[68,11],12],[[65,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,69],[[]],[[]],[[]],[[]],[[]],[[],65],[[],[[14,[64,77]]]],[66,62],[65],[[68,75],[[14,[69]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,6],[[65,65],[[8,[32]]]],0,[74,75],[66,75],[70,34],[62,66],[72,4],[70,4],[73,4],[69,4],[65,4],[74,64],[62,66],0,[[34,78],8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[34,[[14,[71]]]],[34,[[14,[72]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],[[14,[64]]]],[[],4],[[],4],[34,[[14,[76]]]],[[],4],[76,[[14,[66]]]],[[],4],[70,[[14,[62]]]],[[],4],[[],[[14,[68]]]],[[],4],[[],4],[[],[[14,[66]]]],[[],[[14,[68]]]],[72,[[14,[68]]]],[34,[[14,[74]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[71,[[14,[74]]]],[[],[[4,[77]]]],[74,[[14,[64,77]]]],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],79],[80],[81],[82],[[79,79],79],[[79,79]],[[79,79],79],[[79,79]],[79,13],[[79,79],79],[[79,79]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,83],[[[85,[84,84]]],[[85,[84,84]]]],[[[86,[84,84]]],[[86,[84,84]]]],[[[87,[84,84]]],[[87,[84,84]]]],[[[88,[84,84]]],[[88,[84,84]]]],[89,89],[80,80],[81,81],[90,90],[91,91],[92,92],[93,93],[94,94],[95,95],[96,96],[97,97],[98,98],[79,79],[82,82],[[[99,[84,84]]],[[99,[84,84]]]],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[106,106],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[83,83],32],[[[85,[107,107]],85],32],[[[86,[107,107]],86],32],[[[87,[107,107]],87],32],[[[88,[107,107]],88],32],[[89,89],32],[[80,80],32],[[81,81],32],[[90,90],32],[[91,91],32],[[92,92],32],[[93,93],32],[[94,94],32],[[95,95],32],[[96,96],32],[[97,97],32],[[98,98],32],[[79,79],32],[[82,82],32],[[[99,[107,107]],99],32],[[100,100],32],[[101,101],32],[[102,102],32],[[103,103],32],[[104,104],32],[[105,105],32],[[106,106],32],[79,79],[[79,79],5],0,0,0,0,0,0,0,[86,108],[[],[[85,[109,109]]]],[[],[[86,[109,109]]]],[[],[[87,[109,109]]]],[[],[[88,[109,109]]]],[[],89],[[],80],[[],81],[[],90],[[],92],[[],93],[[],94],[[],95],[[],96],[[],97],[[],98],[[],79],[[],82],[[],[[99,[109,109]]]],[[],100],[[],101],[[],102],[[],103],[[],104],[[],105],[[],106],[[],[[4,[83]]]],[[],[[4,[85]]]],[[],[[4,[86]]]],[[],[[4,[87]]]],[[],[[4,[88]]]],[[],[[4,[89]]]],[[],[[4,[80]]]],[[],[[4,[81]]]],[[],[[4,[90]]]],[[],[[4,[91]]]],[[],[[4,[92]]]],[[],[[4,[93]]]],[[],[[4,[94]]]],[[],[[4,[95]]]],[[],[[4,[96]]]],[[],[[4,[97]]]],[[],[[4,[98]]]],[[],[[4,[79]]]],[[],[[4,[82]]]],[[],[[4,[99]]]],[[],[[4,[100]]]],[[],[[4,[101]]]],[[],[[4,[102]]]],[[],[[4,[103]]]],[[],[[4,[104]]]],[[],[[4,[105]]]],[[],[[4,[106]]]],0,[[79,79],79],[[],79],0,[[]],[[]],[[]],[[]],[[]],[[]],[[83,83],5],[[[85,[110,110]],85],5],[[[86,[110,110]],86],5],[[[87,[110,110]],87],5],[[[88,[110,110]],88],5],[[89,89],5],[[80,80],5],[[81,81],5],[[90,90],5],[[91,91],5],[[92,92],5],[[93,93],5],[[94,94],5],[[95,95],5],[[96,96],5],[[97,97],5],[[98,98],5],[[79,79],5],[[82,82],5],[[[99,[110,110]],99],5],[[100,100],5],[[101,101],5],[[102,102],5],[[103,103],5],[[104,104],5],[[105,105],5],[[106,106],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[79,48]],0,0,0,0,0,[[83,11],12],[[[85,[111,111]],11],12],[[[86,[111,111]],11],12],[[[87,[111,111]],11],12],[[[88,[111,111]],11],12],[[89,11],12],[[80,11],12],[[81,11],12],[[90,11],12],[[91,11],12],[[92,11],12],[[93,11],12],[[94,11],12],[[95,11],12],[[96,11],12],[[97,11],12],[[98,11],12],[[79,11],12],[[79,11],12],[[79,11],12],[[79,11],12],[[79,11],12],[[82,11],12],[[[99,[111,111]],11],12],[[100,11],12],[[101,11],12],[[102,11],12],[[103,11],12],[[104,11],12],[[105,11],12],[[106,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[16,92],[16,93],[[]],[13,94],[[]],[13,95],[[]],[13,96],[[]],[[]],[13,97],[[]],[13,98],[[]],[[],82],[[]],[[]],[[]],[13,101],[[]],[[]],[13,103],[[]],[[]],[[]],[[]],[16,106],[13,[[8,[79]]]],[13,79],[13,79],[48,79],[80,5],[83],[[[85,[112,112]]]],[[[86,[112,112]]]],[[[87,[112,112]]]],[[[88,[112,112]]]],[89],[80],[81],[90],[91],[92],[93],[94],[95],[96],[97],[98],[79],[82],[[[99,[112,112]]]],[100],[101],[102],[103],[104],[105],[106],0,0,0,0,0,0,[105],[[79,79]],[[79,79],79],[[79,79],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[79,5],[79,5],0,0,0,[99,86],0,[79,79],[[83,83],[[8,[32]]]],[[[85,[113,113]],85],[[8,[32]]]],[[[86,[113,113]],86],[[8,[32]]]],[[[87,[113,113]],87],[[8,[32]]]],[[[88,[113,113]],88],[[8,[32]]]],[[89,89],[[8,[32]]]],[[80,80],[[8,[32]]]],[[81,81],[[8,[32]]]],[[90,90],[[8,[32]]]],[[91,91],[[8,[32]]]],[[92,92],[[8,[32]]]],[[93,93],[[8,[32]]]],[[94,94],[[8,[32]]]],[[95,95],[[8,[32]]]],[[96,96],[[8,[32]]]],[[97,97],[[8,[32]]]],[[98,98],[[8,[32]]]],[[79,79],[[8,[32]]]],[[82,82],[[8,[32]]]],[[[99,[113,113]],99],[[8,[32]]]],[[100,100],[[8,[32]]]],[[101,101],[[8,[32]]]],[[102,102],[[8,[32]]]],[[103,103],[[8,[32]]]],[[104,104],[[8,[32]]]],[[105,105],[[8,[32]]]],[[106,106],[[8,[32]]]],0,0,0,0,0,0,0,0,0,0,0,0,[105,13],[[79,79]],0,0,0,0,0,0,0,0,0,[83,4],[85,4],[86,4],[87,4],[88,4],[89,4],[80,4],[81,4],[90,4],[91,4],[92,4],[93,4],[94,4],[95,4],[96,4],[97,4],[98,4],[79,4],[82,4],[99,4],[100,4],[101,4],[102,4],[103,4],[104,4],[105,4],[106,4],[[79,79,5]],0,[[79,79],79],[[79,79]],[[79,79],79],[85,14],[86,14],[90],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[79,79]],0,[[],4],[[],[[4,[83]]]],[[],[[4,[85]]]],[[],4],[[],4],[[],[[4,[86]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],[[4,[90]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],[[4,[99]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[79,79],79],0,0,0,[80,5],0,[80,5],[86,5],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[108,5],[108,5],[108,5],[[]],[[]],[[]],[[]],[[]],[[]],0,[114,114],[115,115],[108,108],[[]],[[]],[[]],[[114,114],32],[[115,115],32],[[108,108],32],0,0,[[],114],[[],115],[[],108],[[],[[4,[114]]]],[[],[[4,[115]]]],[[],[[4,[108]]]],[[114,114],5],[[115,115],5],[[108,108],5],[[],5],[[],5],[[],5],0,0,[[114,11],12],[[115,11],12],[[108,11],12],[108,114],[[]],[[],115],[[]],[114,108],[[],108],[[]],[114],[115],[108],[[]],[[]],[[]],0,0,0,0,[[114,114],[[8,[32]]]],[[115,115],[[8,[32]]]],[[108,108],[[8,[32]]]],0,0,[114,4],[115,4],[108,4],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[116,117]],[[116,118]],[[116,119],116],[[116,119]],[[116,13,13,13],120],[[116,13,13,13,13],120],[[116,13,13,13,13],[[8,[120]]]],[[116,13,13,13,13],120],[[116,13,13,13,13],[[8,[120]]]],[[116,13,13,13,13],120],[[116,13,13,13,13],[[8,[120]]]],[[116,13,13,13],[[8,[120]]]],[[116,121],120],[122,6],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[116,117],[[8,[116]]]],[[116,118],[[8,[116]]]],[[116,119],[[8,[116]]]],[[116,117],[[8,[116]]]],[[116,118],[[8,[116]]]],[[116,119],[[8,[116]]]],[116,116],[123,123],[124,124],[125,125],[126,126],[127,127],[122,122],[128,128],[129,129],[130,130],[131,131],[132,132],[133,133],[134,134],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[116,116],32],[[131,131],32],0,[122,128],0,0,0,0,0,[116,13],[116,13],[[],116],[[],125],[[],132],0,[[],[[4,[123]]]],[[],[[4,[124]]]],[[],[[4,[125]]]],[[],[[14,[131]]]],[[],[[4,[132]]]],[[116,116],5],[[125,125],5],[[126,126],5],[[131,131],5],[[],5],[[],5],[[],5],[[],5],0,0,[[116,11],[[4,[33]]]],[[116,11],[[4,[33]]]],[[123,11],12],[[124,11],12],[[125,11],12],[[126,11],12],[[127,11],12],[[122,11],12],[[128,11],12],[[129,11],12],[[130,11],12],[[131,11],12],[[132,11],12],[[133,11],12],[[134,11],12],[[116,34],[[136,[135]]]],[116,136],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],131],[34,131],[[]],[[]],[[]],[[]],[[],[[14,[133]]]],[[137,13,138],116],[[137,13,138],[[8,[116]]]],[137,116],[137,[[8,[116]]]],[34,[[4,[116,139]]]],[[137,13,138,16],116],[[137,13,138,16],[[8,[116]]]],[[137,13,13],116],[[137,13,13],[[8,[116]]]],[[137,13],116],[[137,13],[[8,[116]]]],[116],[126],[122,130],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[133,5],[116,140],[116,141],[116,142],0,[133,6],0,0,0,0,0,[131,116],[116,13],[116,13],0,[116,13],[116,13],0,[[34,34],[[4,[116,139]]]],[[116,116],[[8,[32]]]],[[131,131],[[8,[32]]]],0,0,[116,116],[116,[[8,[116]]]],0,[133,131],0,0,0,[123,4],[124,4],[125,4],[131,14],[132,4],[34,[[14,[[10,[16]]]]]],[[122,74],129],0,[122,6],[[116,116],119],0,0,[[],[[14,[126]]]],[[116,118]],[[116,117]],[[116,116],119],[[116,119],116],[[116,119]],[116,116],[116,[[8,[116]]]],0,[131,49],[129,[[10,[16]]]],[131],[131,21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[131,21],[[],21],[122,6],[123,[[14,[122]]]],[[],4],[[],4],[[],4],[34,[[14,[123]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[116,138],143],[116,138],[[116,13],[[8,[116]]]],[[116,13],[[8,[116]]]],[[116,13],[[8,[116]]]],[[116,13],[[8,[116]]]],[[116,13],[[8,[116]]]],[[116,13],[[8,[116]]]],[[116,137],[[8,[116]]]],[116,137],[[116,116],[[8,[13]]]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[144,144],[145,145],[146,146],[147,147],[148,148],[149,149],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[],145],[[],[[4,[146]]]],[[],[[4,[147]]]],[[],[[4,[148]]]],[[],[[4,[149]]]],[[144,144],5],[[145,145],5],[[146,146],5],[[147,147],5],[[148,148],5],[[149,149],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[144,11],12],[[145,11],12],[[146,11],12],[[147,11],12],[[148,11],12],[[149,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[150,[145]]]],[[],[[150,[149]]]],[[]],[[]],[[]],[[]],[[]],[[]],[146,4],[147,4],[148,4],[149,4],0,[145],[149,[[10,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],4],[[],4],[[],4],[[],4],[[],4],[146,[[14,[149]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],22],[[],22],[[],22],[[],22],[[],22],[[],22],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[151,68],[[]],[[]],[[]],[[]],0,[151,66],[151,152],0,[[],4],[[],4],[123,[[14,[151]]]],[[],4],[[],4],[[],22],[[],22],[[]],[[]],[10],[6,6],[[],[[10,[16]]]],[[],4],[[],4],[[],4],[10],[6,6],[[],[[10,[16]]]]],"p":[[3,"Bootloader"],[3,"Properties"],[4,"Error"],[4,"Result"],[15,"bool"],[15,"usize"],[15,"u16"],[4,"Option"],[3,"Uuid"],[3,"Vec"],[3,"Formatter"],[6,"Result"],[15,"u32"],[6,"Result"],[3,"GetProperties"],[15,"u8"],[8,"Fn"],[4,"Command"],[4,"Response"],[4,"Error"],[3,"String"],[3,"TypeId"],[4,"CommandTag"],[4,"DataPhase"],[3,"HidHeader"],[4,"ResponseTag"],[4,"ReportId"],[3,"Version"],[4,"FlashReadMargin"],[4,"Key"],[4,"KeystoreOperation"],[4,"Ordering"],[3,"Error"],[15,"str"],[4,"ErrorGroup"],[4,"GenericError"],[4,"FlashDriverError"],[4,"SbLoaderError"],[4,"PropertyStoreError"],[4,"CrcCheckerError"],[3,"AvailableCommands"],[3,"AvailablePeripherals"],[6,"Result"],[4,"Property"],[4,"PfrKeystoreUpdateOptions"],[3,"IrqNotificationPin"],[15,"u128"],[8,"IntoIterator"],[15,"u64"],[3,"Protocol"],[6,"Result"],[4,"HidError"],[3,"HidDevice"],[3,"Demand"],[4,"ReceivedPacket"],[6,"HidResult"],[8,"Error"],[3,"ResponsePacket"],[3,"Config"],[3,"HttpConfig"],[3,"Server"],[3,"CertificateChain"],[8,"Iterator"],[3,"Signature"],[3,"Sha256Hash"],[3,"Certificate"],[3,"X509Certificate"],[3,"Certificates"],[3,"CertificateSlot"],[4,"CertificateUriChain"],[4,"SigningKeySource"],[3,"Pki"],[3,"WrappedPki"],[4,"SigningKey"],[3,"PublicKey"],[4,"CertificateSource"],[3,"Error"],[15,"char"],[3,"PrinceSubregion"],[3,"Keycode"],[3,"ActivationCode"],[3,"RawCustomerData"],[3,"ProtectedFlash"],[8,"Clone"],[3,"FactorySettings"],[3,"CustomerSettings"],[3,"WrappedFactorySettings"],[3,"WrappedCustomerSettings"],[3,"KeystoreHeader"],[3,"Keystore"],[3,"NxpArea"],[4,"BootSpeed"],[4,"IspMode"],[3,"BootConfiguration"],[3,"UsbId"],[4,"TrustzoneMode"],[3,"SecureBootConfiguration"],[3,"PrinceConfiguration"],[3,"CustomerSettingsArea"],[3,"Header"],[3,"RawVendorUsage"],[3,"FactorySettingsProgInProgress"],[3,"RotKeysStatus"],[3,"PrinceIvCode"],[3,"MonotonicCounter"],[4,"RotKeyStatus"],[8,"Ord"],[3,"DebugSettings"],[8,"Default"],[8,"PartialEq"],[8,"Debug"],[8,"Hash"],[8,"PartialOrd"],[4,"DebugAccess"],[4,"DebugSetting"],[3,"NaiveDate"],[3,"Days"],[3,"Months"],[3,"Duration"],[3,"NaiveDateTime"],[3,"NaiveTime"],[3,"UnsignedSb21File"],[3,"Config"],[3,"Firmware"],[3,"Reproducibility"],[4,"Filetype"],[3,"Sb21FileParameters"],[3,"Sb21CommandPart"],[3,"SignedSb21File"],[3,"Sb21HeaderPart"],[3,"Version"],[3,"Keyblob"],[3,"Sb2Header"],[3,"FullCertificateBlockHeader"],[3,"StrftimeItems"],[3,"DelayedFormat"],[15,"i32"],[4,"Weekday"],[3,"ParseError"],[3,"IsoWeek"],[3,"NaiveDateDaysIterator"],[3,"NaiveDateWeeksIterator"],[3,"NaiveWeek"],[4,"BootTag"],[3,"RawBootCommand"],[4,"SingleBootCommandDescription"],[4,"BootCommandSequenceDescription"],[4,"BootCommandDescription"],[4,"BootCommand"],[6,"IResult"],[3,"ImageSigningRequest"],[3,"SignedImage"],[8,"UuidSelectable"],[13,"Generic"],[13,"FlashDriver"],[13,"PropertyStore"],[13,"CrcChecker"],[13,"SbLoader"],[13,"Unknown"],[13,"GetProperty"],[13,"Keystore"],[13,"EraseFlash"],[13,"ReadMemory"],[13,"WriteMemory"],[13,"WriteMemoryWords"],[13,"ConfigureMemory"],[13,"ReceiveSbFile"],[13,"CommandData"],[13,"SetKey"],[13,"GenerateKey"],[13,"Data"],[13,"GetProperty"],[13,"ReadMemory"],[13,"HidApi"],[13,"InvalidReportId"],[13,"UnknownResponseTag"],[13,"Response"],[13,"Data"],[13,"X509DerFile"],[13,"Pkcs11Uri"],[13,"Root"],[13,"Chain"],[13,"Pkcs1"],[13,"Pkcs11Uri"],[13,"Pkcs1PemFile"],[13,"Pkcs11Uri"],[13,"Reserved"],[13,"Custom"],[3,"CertificateBlockHeader"],[13,"Load"],[13,"Fill"],[13,"EraseRegion"],[13,"Tag"],[13,"CheckSecureFirmwareVersion"],[13,"CheckNonsecureFirmwareVersion"],[13,"Single"],[13,"Sequence"],[13,"Load"],[13,"Erase"],[13,"CheckNonsecureFirmwareVersion"],[13,"CheckSecureFirmwareVersion"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
